{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this;\n\nimport { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport NumberContainer from \"../components/game/NumberContainer\";\nimport Card from \"../components/ui/Card\";\nimport InstructionText from \"../components/ui/InstructionText\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Title from \"../components/ui/Title\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Colors from \"../constants/Colors\";\nimport GuessLogItem from \"../components/game/GuessLogItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar generateRandomBetween = function generateRandomBetween(min, max, exclude) {\n  var rndNum = Math.floor(Math.random() * (max - min)) + min;\n\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n};\n\nvar minBoundary = 1,\n    maxBoundary = 100;\n\nvar GameScreen = function GameScreen(_ref) {\n  var userNumber = _ref.userNumber,\n      onGameOver = _ref.onGameOver;\n  var initialGuess = generateRandomBetween(1, 100, userNumber);\n\n  var _useState = useState(initialGuess),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentGuess = _useState2[0],\n      setCurrentGuess = _useState2[1];\n\n  var _useState3 = useState([initialGuess]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      guessRounds = _useState4[0],\n      setGuessRounds = _useState4[1];\n\n  useEffect(function () {\n    if (currentGuess === userNumber) {\n      onGameOver(guessRounds.length);\n    }\n  }, [currentGuess, userNumber, onGameOver]);\n\n  var nextGuessHandler = function nextGuessHandler(direction) {\n    if (direction === 'lower' && currentGuess < userNumber || direction === 'greater' && currentGuess > userNumber) {\n      Alert.alert(\"Don't lie!\", \"You know that this is wrong....!\", [{\n        text: 'Sorry!',\n        style: 'cancel'\n      }]);\n      return;\n    }\n\n    if (direction === 'lower') {\n      maxBoundary = currentGuess;\n    } else {\n      minBoundary = currentGuess + 1;\n    }\n\n    var newRndNumber = generateRandomBetween(minBoundary, maxBoundary, currentGuess);\n    setCurrentGuess(newRndNumber);\n    setGuessRounds(function (prevGuessRounds) {\n      return [newRndNumber].concat(_toConsumableArray(prevGuessRounds));\n    });\n  };\n\n  var guessRoundLength = guessRounds.length;\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(Title, {\n      children: \"Opponents Guess\"\n    }), _jsx(NumberContainer, {\n      children: currentGuess\n    }), _jsxs(Card, {\n      children: [_jsx(InstructionText, {\n        style: styles.InstructionStyleObject,\n        children: \"Higher Or Lower\"\n      }), _jsxs(View, {\n        style: styles.buttonsContainer,\n        children: [_jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(PrimaryButton, {\n            onPress: nextGuessHandler.bind(_this, \"lower\"),\n            children: _jsx(Ionicons, {\n              name: \"md-remove\",\n              size: 24,\n              color: Colors.common.white\n            })\n          })\n        }), _jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(PrimaryButton, {\n            onPress: nextGuessHandler.bind(_this, \"greater\"),\n            children: _jsx(Ionicons, {\n              name: \"md-add\",\n              size: 24,\n              color: Colors.common.white\n            })\n          })\n        })]\n      })]\n    }), _jsx(View, {\n      style: styles.listContainer,\n      children: _jsx(FlatList, {\n        data: guessRounds,\n        renderItem: function renderItem(itemData) {\n          return _jsx(GuessLogItem, {\n            roundNumber: guessRoundLength - itemData.index,\n            guess: itemData.item\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item;\n        }\n      })\n    })]\n  });\n};\n\nexport default GameScreen;\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 24\n  },\n  InstructionStyleObject: {\n    marginBottom: 10\n  },\n  buttonsContainer: {\n    flexDirection: 'row'\n  },\n  buttonContainer: {\n    flex: 1\n  },\n  listContainer: {\n    flex: 1,\n    padding: 24\n  }\n});","map":{"version":3,"names":["useEffect","useState","NumberContainer","Card","InstructionText","PrimaryButton","Title","Ionicons","Colors","GuessLogItem","generateRandomBetween","min","max","exclude","rndNum","Math","floor","random","minBoundary","maxBoundary","GameScreen","userNumber","onGameOver","initialGuess","currentGuess","setCurrentGuess","guessRounds","setGuessRounds","length","nextGuessHandler","direction","Alert","alert","text","style","newRndNumber","prevGuessRounds","guessRoundLength","styles","screen","InstructionStyleObject","buttonsContainer","buttonContainer","bind","common","white","listContainer","itemData","index","item","StyleSheet","create","flex","padding","marginBottom","flexDirection"],"sources":["/Users/venkydosapati/Desktop/WorkSpace/ReactWorkspace/ReactNative/screens/GameScreen.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport {View, Text, StyleSheet, Alert, FlatList, Dimensions } from \"react-native\";\nimport NumberContainer from \"../components/game/NumberContainer\";\nimport Card from \"../components/ui/Card\";\nimport InstructionText from \"../components/ui/InstructionText\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Title from \"../components/ui/Title\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport Colors from \"../constants/Colors\";\nimport GuessLogItem from \"../components/game/GuessLogItem\";\nconst generateRandomBetween = (min, max, exclude) =>{\n    const rndNum = Math.floor(Math.random() * (max - min)) + min;\n    if(rndNum === exclude){\n        return generateRandomBetween(min, max, exclude);\n    }else {\n        return rndNum;\n    }\n}\nlet minBoundary = 1, maxBoundary = 100;\nconst GameScreen = ({userNumber, onGameOver}) => {\n    const initialGuess = generateRandomBetween(1, 100, userNumber);\n    const [currentGuess, setCurrentGuess] = useState(initialGuess);\n    const [guessRounds, setGuessRounds] = useState([initialGuess]);\n\n    useEffect(() => {\n        if(currentGuess === userNumber){\n            onGameOver(guessRounds.length)\n        }\n    }, [currentGuess, userNumber, onGameOver])\n\n    const nextGuessHandler = (direction) => {\n        if(direction === 'lower' && currentGuess < userNumber \n        || direction === 'greater' && currentGuess > userNumber){\n            Alert.alert(\"Don't lie!\", \"You know that this is wrong....!\",[\n                {text: 'Sorry!', style:'cancel'}\n            ]);\n            return;\n        }\n        if(direction === 'lower'){\n            maxBoundary = currentGuess;\n        } else {\n            minBoundary = currentGuess + 1;\n        }\n        const newRndNumber = generateRandomBetween(minBoundary, maxBoundary, currentGuess);\n        setCurrentGuess(newRndNumber);\n        setGuessRounds(prevGuessRounds => [newRndNumber, ...prevGuessRounds])\n    }\n\n    let guessRoundLength =  guessRounds.length;\n\n    return (\n      <View style={styles.screen}>\n        <Title>Opponents Guess</Title>\n        <NumberContainer>{currentGuess}</NumberContainer>\n        <Card>\n          <InstructionText style={styles.InstructionStyleObject}>\n            Higher Or Lower\n          </InstructionText>\n          <View style={styles.buttonsContainer}>\n            <View style={styles.buttonContainer}>\n              <PrimaryButton onPress={nextGuessHandler.bind(this, \"lower\")}>\n                <Ionicons\n                  name=\"md-remove\"\n                  size={24}\n                  color={Colors.common.white}\n                />\n              </PrimaryButton>\n            </View>\n            <View style={styles.buttonContainer}>\n              <PrimaryButton onPress={nextGuessHandler.bind(this, \"greater\")}>\n                <Ionicons name=\"md-add\" size={24} color={Colors.common.white} />\n              </PrimaryButton>\n            </View>\n          </View>\n        </Card>\n        <View style={styles.listContainer}>\n          {/* { guessRounds.map(item => <Text key={item}> {item}</Text>)} */}\n          <FlatList\n            data={guessRounds}\n            renderItem={(itemData) => <GuessLogItem roundNumber={guessRoundLength - itemData.index} guess={itemData.item}/>}\n            keyExtractor={(item) => item}\n          />\n        </View>\n      </View>\n    );\n}\n\nexport default GameScreen\n\nconst styles = StyleSheet.create({\n    screen:{\n        flex: 1,\n        padding: 24\n    },\n    InstructionStyleObject:{\n        marginBottom: 10\n    },\n    buttonsContainer: {\n        flexDirection: 'row'\n    },\n    buttonContainer: {\n        flex: 1\n    },\n    listContainer:{\n      flex: 1,\n      padding: 24\n    }\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}