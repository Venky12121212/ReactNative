{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport InstructionText from \"../components/ui/InstructionText\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Title from \"../components/ui/Title\";\nimport Colors from \"../constants/Colors\";\nimport Card from \"../components/ui/Card\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction StartGameScreen(_ref) {\n  var onPickNumber = _ref.onPickNumber;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredNumber = _useState2[0],\n      setEnteredNumber = _useState2[1];\n\n  var numberInputHandler = function numberInputHandler(enteredText) {\n    setEnteredNumber(enteredText);\n  };\n\n  var resetInputHandler = function resetInputHandler() {\n    setEnteredNumber('');\n  };\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width,\n      height = _useWindowDimensions.height;\n\n  var marginTopDistance = height < 380 ? 30 : 100;\n\n  var confirmInputHandler = function confirmInputHandler() {\n    var chooseNumber = parseInt(enteredNumber);\n\n    if (isNaN(chooseNumber) || chooseNumber <= 0 || chooseNumber > 99) {\n      Alert.alert('Invalid Number!', 'Number has to be a number between 1 to 99.', [{\n        text: 'Okay',\n        style: 'destructive',\n        onPress: resetInputHandler\n      }]);\n      return;\n    }\n\n    onPickNumber(chooseNumber);\n  };\n\n  return _jsx(ScrollView, {\n    style: styles.screen,\n    children: _jsx(KeyboardAvoidingView, {\n      style: styles.screen,\n      behavior: \"position\",\n      children: _jsxs(View, {\n        style: [styles.rootContainer, {\n          marginTop: marginTopDistance\n        }],\n        children: [_jsx(Title, {\n          children: \"Guess My Number\"\n        }), _jsxs(Card, {\n          children: [_jsx(InstructionText, {\n            children: \"Enter a Number\"\n          }), _jsx(TextInput, {\n            maxLength: 2,\n            keyboardType: \"number-pad\",\n            autoCorrect: true,\n            autoCapitalize: \"none\",\n            onChangeText: numberInputHandler,\n            value: enteredNumber,\n            style: styles.numerInput\n          }), _jsxs(View, {\n            style: styles.buttonsContainer,\n            children: [_jsx(View, {\n              style: styles.buttonContainer,\n              children: _jsx(PrimaryButton, {\n                onPress: resetInputHandler,\n                children: \"Reset\"\n              })\n            }), _jsx(View, {\n              style: styles.buttonContainer,\n              children: _jsx(PrimaryButton, {\n                onPress: confirmInputHandler,\n                children: \"Add\"\n              })\n            })]\n          })]\n        })]\n      })\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1\n  },\n  rootContainer: {\n    flex: 1,\n    alignItems: \"center\",\n    color: Colors.common.white\n  },\n  inputContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 40,\n    marginHorizontal: 24,\n    padding: 16,\n    backgroundColor: Colors.primary800,\n    borderRadius: 8,\n    elevation: 4,\n    shadowColor: \"black\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 6,\n    shadowOpacity: 1\n  },\n  numerInput: {\n    height: 50,\n    width: 50,\n    fontSize: 32,\n    borderBottomColor: Colors.accent500,\n    fontWeight: \"bold\",\n    borderBottomWidth: 2,\n    color: Colors.accent500,\n    textAlign: \"center\",\n    marginBottom: 10\n  },\n  buttonsContainer: {\n    flexDirection: \"row\"\n  },\n  buttonContainer: {\n    flex: 1\n  }\n});\nexport default StartGameScreen;","map":{"version":3,"names":["useState","InstructionText","PrimaryButton","Title","Colors","Card","StartGameScreen","onPickNumber","enteredNumber","setEnteredNumber","numberInputHandler","enteredText","resetInputHandler","useWindowDimensions","width","height","marginTopDistance","confirmInputHandler","chooseNumber","parseInt","isNaN","Alert","alert","text","style","onPress","styles","screen","rootContainer","marginTop","numerInput","buttonsContainer","buttonContainer","StyleSheet","create","flex","alignItems","color","common","white","inputContainer","justifyContent","marginHorizontal","padding","backgroundColor","primary800","borderRadius","elevation","shadowColor","shadowOffset","shadowRadius","shadowOpacity","fontSize","borderBottomColor","accent500","fontWeight","borderBottomWidth","textAlign","marginBottom","flexDirection"],"sources":["/Users/venkydosapati/Desktop/WorkSpace/ReactWorkspace/ReactNative/screens/StartGameScreen.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { TextInput, Text, View, StyleSheet, Alert, useWindowDimensions, KeyboardAvoidingView, ScrollView } from 'react-native'\r\nimport InstructionText from '../components/ui/InstructionText';\r\nimport PrimaryButton from '../components/ui/PrimaryButton'\r\nimport Title from '../components/ui/Title';\r\nimport Colors from '../constants/Colors';\r\nimport Card from '../components/ui/Card';\r\nfunction StartGameScreen({onPickNumber}) {\r\n    const [enteredNumber, setEnteredNumber] = useState('');\r\n\r\n    const numberInputHandler = (enteredText) => {\r\n        setEnteredNumber(enteredText)\r\n    }\r\n\r\n    const resetInputHandler = () => {\r\n        setEnteredNumber('')\r\n    }\r\n    const {width, height}  = useWindowDimensions();\r\n    const marginTopDistance = height < 380 ? 30 : 100; \r\n\r\n    const confirmInputHandler = () => {\r\n        const chooseNumber = parseInt(enteredNumber);\r\n        if(isNaN(chooseNumber) || chooseNumber <=0 || chooseNumber >99){\r\n            Alert.alert(\r\n                'Invalid Number!',\r\n                'Number has to be a number between 1 to 99.',\r\n                [{text: 'Okay', style: 'destructive', onPress: resetInputHandler}]\r\n            );\r\n            return;\r\n        }\r\n        onPickNumber(chooseNumber);\r\n    }\r\n    return (\r\n      <ScrollView style={styles.screen}>\r\n        <KeyboardAvoidingView style={styles.screen} behavior=\"position\">\r\n          <View\r\n            style={[styles.rootContainer, { marginTop: marginTopDistance }]}\r\n          >\r\n            <Title>Guess My Number</Title>\r\n            <Card>\r\n              <InstructionText>Enter a Number</InstructionText>\r\n              <TextInput\r\n                maxLength={2}\r\n                keyboardType=\"number-pad\"\r\n                autoCorrect={true}\r\n                autoCapitalize=\"none\"\r\n                onChangeText={numberInputHandler}\r\n                value={enteredNumber}\r\n                style={styles.numerInput}\r\n              />\r\n              <View style={styles.buttonsContainer}>\r\n                <View style={styles.buttonContainer}>\r\n                  <PrimaryButton onPress={resetInputHandler}>\r\n                    Reset\r\n                  </PrimaryButton>\r\n                </View>\r\n                <View style={styles.buttonContainer}>\r\n                  <PrimaryButton onPress={confirmInputHandler}>\r\n                    Add\r\n                  </PrimaryButton>\r\n                </View>\r\n              </View>\r\n            </Card>\r\n          </View>\r\n        </KeyboardAvoidingView>\r\n      </ScrollView>\r\n    );\r\n}\r\n\r\n// const deviceWidth = Dimensions.get('window').height;\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    flex: 1,\r\n  },\r\n  rootContainer: {\r\n    flex: 1,\r\n    // marginTop: deviceWidth < 400 ? 30 : 100,\r\n    alignItems: \"center\",\r\n    color: Colors.common.white,\r\n  },\r\n  inputContainer: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 40,\r\n    marginHorizontal: 24,\r\n    padding: 16,\r\n    backgroundColor: Colors.primary800,\r\n    borderRadius: 8,\r\n    elevation: 4,\r\n    shadowColor: \"black\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowRadius: 6,\r\n    shadowOpacity: 1,\r\n  },\r\n  numerInput: {\r\n    height: 50,\r\n    width: 50,\r\n    fontSize: 32,\r\n    borderBottomColor: Colors.accent500,\r\n    fontWeight: \"bold\",\r\n    borderBottomWidth: 2,\r\n    color: Colors.accent500,\r\n    textAlign: \"center\",\r\n    marginBottom: 10,\r\n  },\r\n  buttonsContainer: {\r\n    flexDirection: \"row\",\r\n  },\r\n  buttonContainer: {\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default StartGameScreen"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;;;;;;AAEA,OAAOC,eAAP;AACA,OAAOC,aAAP;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;;;;AACA,SAASC,eAAT,OAAyC;EAAA,IAAfC,YAAe,QAAfA,YAAe;;EACrC,gBAA0CP,QAAQ,CAAC,EAAD,CAAlD;EAAA;EAAA,IAAOQ,aAAP;EAAA,IAAsBC,gBAAtB;;EAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,WAAD,EAAiB;IACxCF,gBAAgB,CAACE,WAAD,CAAhB;EACH,CAFD;;EAIA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;IAC5BH,gBAAgB,CAAC,EAAD,CAAhB;EACH,CAFD;;EAGA,2BAAyBI,mBAAmB,EAA5C;EAAA,IAAOC,KAAP,wBAAOA,KAAP;EAAA,IAAcC,MAAd,wBAAcA,MAAd;;EACA,IAAMC,iBAAiB,GAAGD,MAAM,GAAG,GAAT,GAAe,EAAf,GAAoB,GAA9C;;EAEA,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;IAC9B,IAAMC,YAAY,GAAGC,QAAQ,CAACX,aAAD,CAA7B;;IACA,IAAGY,KAAK,CAACF,YAAD,CAAL,IAAuBA,YAAY,IAAG,CAAtC,IAA2CA,YAAY,GAAE,EAA5D,EAA+D;MAC3DG,KAAK,CAACC,KAAN,CACI,iBADJ,EAEI,4CAFJ,EAGI,CAAC;QAACC,IAAI,EAAE,MAAP;QAAeC,KAAK,EAAE,aAAtB;QAAqCC,OAAO,EAAEb;MAA9C,CAAD,CAHJ;MAKA;IACH;;IACDL,YAAY,CAACW,YAAD,CAAZ;EACH,CAXD;;EAYA,OACE,KAAC,UAAD;IAAY,KAAK,EAAEQ,MAAM,CAACC,MAA1B;IAAA,UACE,KAAC,oBAAD;MAAsB,KAAK,EAAED,MAAM,CAACC,MAApC;MAA4C,QAAQ,EAAC,UAArD;MAAA,UACE,MAAC,IAAD;QACE,KAAK,EAAE,CAACD,MAAM,CAACE,aAAR,EAAuB;UAAEC,SAAS,EAAEb;QAAb,CAAvB,CADT;QAAA,WAGE,KAAC,KAAD;UAAA;QAAA,EAHF,EAIE,MAAC,IAAD;UAAA,WACE,KAAC,eAAD;YAAA;UAAA,EADF,EAEE,KAAC,SAAD;YACE,SAAS,EAAE,CADb;YAEE,YAAY,EAAC,YAFf;YAGE,WAAW,EAAE,IAHf;YAIE,cAAc,EAAC,MAJjB;YAKE,YAAY,EAAEN,kBALhB;YAME,KAAK,EAAEF,aANT;YAOE,KAAK,EAAEkB,MAAM,CAACI;UAPhB,EAFF,EAWE,MAAC,IAAD;YAAM,KAAK,EAAEJ,MAAM,CAACK,gBAApB;YAAA,WACE,KAAC,IAAD;cAAM,KAAK,EAAEL,MAAM,CAACM,eAApB;cAAA,UACE,KAAC,aAAD;gBAAe,OAAO,EAAEpB,iBAAxB;gBAAA;cAAA;YADF,EADF,EAME,KAAC,IAAD;cAAM,KAAK,EAAEc,MAAM,CAACM,eAApB;cAAA,UACE,KAAC,aAAD;gBAAe,OAAO,EAAEf,mBAAxB;gBAAA;cAAA;YADF,EANF;UAAA,EAXF;QAAA,EAJF;MAAA;IADF;EADF,EADF;AAmCH;;AAKD,IAAMS,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;EAC/BP,MAAM,EAAE;IACNQ,IAAI,EAAE;EADA,CADuB;EAI/BP,aAAa,EAAE;IACbO,IAAI,EAAE,CADO;IAGbC,UAAU,EAAE,QAHC;IAIbC,KAAK,EAAEjC,MAAM,CAACkC,MAAP,CAAcC;EAJR,CAJgB;EAU/BC,cAAc,EAAE;IACdC,cAAc,EAAE,QADF;IAEdL,UAAU,EAAE,QAFE;IAGdP,SAAS,EAAE,EAHG;IAIda,gBAAgB,EAAE,EAJJ;IAKdC,OAAO,EAAE,EALK;IAMdC,eAAe,EAAExC,MAAM,CAACyC,UANV;IAOdC,YAAY,EAAE,CAPA;IAQdC,SAAS,EAAE,CARG;IASdC,WAAW,EAAE,OATC;IAUdC,YAAY,EAAE;MAAEnC,KAAK,EAAE,CAAT;MAAYC,MAAM,EAAE;IAApB,CAVA;IAWdmC,YAAY,EAAE,CAXA;IAYdC,aAAa,EAAE;EAZD,CAVe;EAwB/BrB,UAAU,EAAE;IACVf,MAAM,EAAE,EADE;IAEVD,KAAK,EAAE,EAFG;IAGVsC,QAAQ,EAAE,EAHA;IAIVC,iBAAiB,EAAEjD,MAAM,CAACkD,SAJhB;IAKVC,UAAU,EAAE,MALF;IAMVC,iBAAiB,EAAE,CANT;IAOVnB,KAAK,EAAEjC,MAAM,CAACkD,SAPJ;IAQVG,SAAS,EAAE,QARD;IASVC,YAAY,EAAE;EATJ,CAxBmB;EAmC/B3B,gBAAgB,EAAE;IAChB4B,aAAa,EAAE;EADC,CAnCa;EAsC/B3B,eAAe,EAAE;IACfG,IAAI,EAAE;EADS;AAtCc,CAAlB,CAAf;AA2CA,eAAe7B,eAAf"},"metadata":{},"sourceType":"module"}